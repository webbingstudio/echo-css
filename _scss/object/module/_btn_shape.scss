/*
--------------------
#{$pr}#{$m}btn#{$c3}arrowed
--------------------
*/

[class*="#{$pr}#{$m}btn#{$c3}arrowed"] {

    &:after {
        content: "";
        position: absolute;
        top: 50%;
        width: .5em;
        height: .5em;
        transform-origin: center center;
        border-top: .2em solid $body-color;
        border-left: .2em solid $body-color;
        border-radius: .1em;
    }

    &.#{$pr}#{$m}btn#{$c3}style#{$c3}a {

        &:after {
            border-top-color: $body-inverse-color;
            border-left-color: $body-inverse-color;
        }

        &:hover,
        &:focus,
        &:active {

            &:after {
                border-top-color: $body-color;
                border-left-color: $body-color;
            }

        }

        &.#{$pr}#{$m}btn#{$c3}inverse {

            &:after {
                border-top-color: $body-color;
                border-left-color: $body-color;
            }

            &:hover,
            &:focus,
            &:active {

                &:after {
                    border-top-color: $body-inverse-color;
                    border-left-color: $body-inverse-color;
                }

            }

        }

    }

    &.#{$pr}#{$m}btn#{$c3}style#{$c3}b {

        &:after {
            border-top-color: $body-color;
            border-left-color: $body-color;
        }

        &:hover,
        &:focus,
        &:active {

            &:after {
                border-top-color: $body-inverse-color;
                border-left-color: $body-inverse-color;
            }

        }

        &.#{$pr}#{$m}btn#{$c3}inverse {

            &:after {
                border-top-color: $body-inverse-color;
                border-left-color: $body-inverse-color;
            }

            &:hover,
            &:focus,
            &:active {

                &:after {
                    border-top-color: $body-color;
                    border-left-color: $body-color;
                }

            }

        }

    }

}

.#{$pr}#{$m}btn#{$c3}arrowed#{$c3}left {

    &:not(.#{$pr}#{$m}btn#{$c3}block) {
        padding-left: 2em;
    }

    &:after {
        left: .65em;
        transform:
            translateY( -50% )
            rotate( -45deg );
    }

}

.#{$pr}#{$m}btn#{$c3}arrowed#{$c3}right {

    &:not(.#{$pr}#{$m}btn#{$c3}block) {
        padding-right: 2em;
    }

    &:after {
        right: .65em;
        transform:
            translateY( -50% )
            rotate( 135deg );
    }

}


/*
--------------------
#{$pr}#{$m}btn#{$c3}block
--------------------
*/

.#{$pr}#{$m}btn#{$c3}block {
    display: block;
    width: 100%;
    max-width: map-get( $object-max-widths, 'sm' );
    margin: 0 auto;

    &.#{$pr}#{$m}btn {
        padding-left: 0;
        padding-right: 0;
    }

    &.#{$pr}#{$m}btn#{$c3}lg {

        @include media-breakpoint-up(sm) {
            max-width: map-get( $object-max-widths, 'md' );
        }

    }

    &.#{$pr}#{$m}btn#{$c3}xl {

        @include media-breakpoint-up(sm) {
            max-width: map-get( $object-max-widths, 'lg' );
        }

    }

    &.#{$pr}#{$m}btn#{$c3}xxl {
        max-width: none;

        @include media-breakpoint-up(sm) {
            max-width: map-get( $object-max-widths, 'lg' );
        }

        @include media-breakpoint-up(lg) {
            max-width: map-get( $object-max-widths, 'xl' ); 
        }

    }

}


/*
--------------------
#{$pr}#{$m}btn#{$c3}oval
--------------------
*/

/*
note: Meaning of "10em"
「em」で大きな値を指定すると、ボタンが小判型になります。
Specify a large value for "em", the button becomes an oval type
--------------------
*/

.#{$pr}#{$m}btn#{$c3}oval {
    border-radius: 10em;
}


/*
--------------------
#{$pr}#{$m}btn#{$c3}circle
--------------------
*/

.#{$pr}#{$m}btn#{$c3}circle {
    overflow: hidden;
    width: $btn-circle-width-md;
    height: $btn-circle-width-md;
    line-height: $btn-circle-width-md;
    border-radius: 50%;

    &.#{$pr}#{$m}btn {
        padding: 0;
    }

    &.#{$pr}#{$m}btn#{$c3}lg {
        width: $btn-circle-width-lg;
        height: $btn-circle-width-lg;
        line-height: $btn-circle-width-lg;
    }

    &.#{$pr}#{$m}btn#{$c3}xl {
        width: $btn-circle-width-lg;
        height: $btn-circle-width-lg;
        line-height: $btn-circle-width-lg;

        @include media-breakpoint-up(md) {
            width: $btn-circle-width-xl;
            height: $btn-circle-width-xl;
            line-height: $btn-circle-width-xl;
        }
    }

    &.#{$pr}#{$m}btn#{$c3}xxl {
        width: $btn-circle-width-xl;
        height: $btn-circle-width-xl;
        line-height: $btn-circle-width-xl;

        @include media-breakpoint-up(md) {
            width: $btn-circle-width-xxl;
            height: $btn-circle-width-xxl;
            line-height: $btn-circle-width-xxl;
        }

    }

}


/*
--------------------
#{$pr}#{$m}btn#{$c3}square
--------------------
*/

.#{$pr}#{$m}btn#{$c3}square {
    overflow: hidden;
    width: $btn-square-width-md;
    height: $btn-square-width-md;
    line-height: $btn-square-width-md;

    &.#{$pr}#{$m}btn {
        padding: 0;
    }

    &.#{$pr}#{$m}btn#{$c3}lg {
        width: $btn-square-width-lg;
        height: $btn-square-width-lg;
        line-height: $btn-square-width-lg;
    }

    &.#{$pr}#{$m}btn#{$c3}xl {
        width: $btn-square-width-lg;
        height: $btn-square-width-lg;
        line-height: $btn-square-width-lg;

        @include media-breakpoint-up(md) {
            width: $btn-square-width-xl;
            height: $btn-square-width-xl;
            line-height: $btn-square-width-xl;
        }

    }

    &.#{$pr}#{$m}btn#{$c3}xxl {
        width: $btn-square-width-xl;
        height: $btn-square-width-xl;
        line-height: $btn-square-width-xl;

        @include media-breakpoint-up(md) {
            width: $btn-square-width-xxl;
            height: $btn-square-width-xxl;
            line-height: $btn-square-width-xxl;
        }

    }

}


